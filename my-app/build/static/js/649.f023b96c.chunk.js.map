{"version":3,"file":"static/js/649.f023b96c.chunk.js","mappings":"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","sources":["pages/Appointments.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\n\r\nconst Appointments = () => {\r\n  const [appointments, setAppointments] = useState<any[]>([]);\r\n  const [servicesList, setServicesList] = useState<any[]>([]);\r\n  const [staffList, setStaffList] = useState<any[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState<string>(\r\n    new Date().toISOString().split('T')[0],\r\n  );\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingRowId, setEditingRowId] = useState<number | null>(null);\r\n\r\n  const [newAppointment, setNewAppointment] = useState({\r\n    appointmentID: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    userID: '',\r\n    serviceID: '',\r\n    appointmentDate: '',\r\n    status: 'pa përfunduar',\r\n    notes: '',\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    appointmentID: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    userID: '',\r\n    serviceID: '',\r\n    appointmentDate: '',\r\n    status: 'pa përfunduar',\r\n    notes: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    fetchServicesList();\r\n    fetchStaffList();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Appointment',\r\n      );\r\n      setAppointments(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n    }\r\n  };\r\n\r\n  const fetchServicesList = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Service',\r\n      );\r\n\r\n      // Directly use response.data since it's already an array\r\n      const services = Array.isArray(response.data) ? response.data : [];\r\n\r\n      // Save to state\r\n      setServicesList(services);\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n      setServicesList([]); // Ensure services list is an empty array on error\r\n    }\r\n  };\r\n\r\n  const fetchStaffList = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.studio-linda.com/api/User');\r\n\r\n      // Filter only staff with roleID 2 or 3\r\n      const filteredStaff = response.data.filter(\r\n        (staff: any) => staff.roleID === 2 || staff.roleID === 3,\r\n      );\r\n\r\n      setStaffList(filteredStaff);\r\n    } catch (error) {\r\n      console.error('Error fetching staff:', error);\r\n      setStaffList([]); // Fallback to an empty list in case of an error\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<\r\n      HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n    >,\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setNewAppointment({\r\n      ...newAppointment,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleEditInputChange = (\r\n    e: React.ChangeEvent<\r\n      HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n    >,\r\n  ) => {\r\n    const { name, value } = e.target;\r\n    setEditFormData({\r\n      ...editFormData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //UserID: localStorage.getItem('userId'),\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      client: {\r\n        firstName: newAppointment.firstName,\r\n        lastName: newAppointment.lastName,\r\n        phoneNumber: newAppointment.phoneNumber,\r\n        email: newAppointment.email,\r\n      },\r\n      appointmentID: newAppointment.appointmentID || 0, // Include this if required\r\n      userID: newAppointment.userID,\r\n      serviceID: newAppointment.serviceID,\r\n      appointmentDate: newAppointment.appointmentDate,\r\n      status: newAppointment.status,\r\n      notes: newAppointment.notes,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://api.studio-linda.com/api/Appointment',\r\n        payload,\r\n      );\r\n\r\n      setAppointments([...appointments, response.data]);\r\n      setShowForm(false);\r\n      setNewAppointment({\r\n        appointmentID: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        userID: '',\r\n        serviceID: '',\r\n        appointmentDate: '',\r\n        status: 'pa përfunduar',\r\n        notes: '',\r\n      });\r\n    } catch (error) {\r\n      console.error(\r\n        'Error adding appointment:',\r\n        error.response?.data || error.message,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = (appt: any) => {\r\n    if (editingRowId === appt.appointmentID) {\r\n      // Cancel edit mode if clicking the same edit button again\r\n      setEditingRowId(null);\r\n      setEditFormData({\r\n        appointmentID: appt.appointmentID,\r\n        firstName: appt.client?.firstName || '',\r\n        lastName: appt.client?.lastName || '',\r\n        phoneNumber: appt.client?.phoneNumber || '',\r\n        email: appt.client?.email || '',\r\n        userID: appt.userID || '',\r\n        serviceID: appt.serviceID || '',\r\n        appointmentDate: appt.appointmentDate || '',\r\n        status: appt.status || 'pa përfunduar',\r\n        notes: appt.notes || '',\r\n      });\r\n    } else {\r\n      const service = servicesList.find(\r\n        (service) => service.serviceName === appt.serviceName,\r\n      );\r\n      const staff = staffList.find(\r\n        (staff) => `${staff.firstName} ${staff.lastName}` === appt.staffName,\r\n      );\r\n\r\n      const isValidDate =\r\n        appt.appointmentDate &&\r\n        !isNaN(new Date(appt.appointmentDate).getTime());\r\n\r\n      // Set form data for editing, including picked service and staff\r\n      setEditingRowId(appt.appointmentID);\r\n      setEditFormData({\r\n        appointmentID: appt.appointmentID,\r\n        firstName: appt.client?.firstName || '',\r\n        lastName: appt.client?.lastName || '',\r\n        phoneNumber: appt.client?.phoneNumber || '',\r\n        email: appt.client?.email || '',\r\n        serviceID: service?.serviceID || '',\r\n        userID: staff?.userID || '',\r\n        appointmentDate: isValidDate\r\n          ? new Date(appt.appointmentDate).toISOString().slice(0, 16)\r\n          : '',\r\n        status: appt.status || 'pa përfunduar',\r\n        notes: appt.notes || '',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      client: {\r\n        firstName: editFormData.firstName,\r\n        lastName: editFormData.lastName,\r\n        phoneNumber: editFormData.phoneNumber,\r\n        email: editFormData.email,\r\n      },\r\n      appointmentID: editFormData.appointmentID,\r\n      userID: editFormData.userID,\r\n      serviceID: Number(editFormData.serviceID),\r\n      appointmentDate: editFormData.appointmentDate,\r\n      status: editFormData.status,\r\n      notes: editFormData.notes,\r\n    };\r\n\r\n    try {\r\n      // API call to update the appointment\r\n      const response = await axios.put(\r\n        `https://api.studio-linda.com/api/Appointment/${editFormData.appointmentID}`,\r\n        payload,\r\n      );\r\n\r\n      // Update the appointments state\r\n      setAppointments((prevAppointments) =>\r\n        prevAppointments.map((appt) =>\r\n          appt.appointmentID === response.data.appointmentID\r\n            ? { ...appt, ...response.data }\r\n            : appt,\r\n        ),\r\n      );\r\n\r\n      // Reset edit form data and close edit mode\r\n      setEditingRowId(null);\r\n      setEditFormData({\r\n        appointmentID: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        userID: '',\r\n        serviceID: '',\r\n        appointmentDate: '',\r\n        status: 'pa përfunduar',\r\n        notes: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error while editing appointment:', error);\r\n    }\r\n  };\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await axios.delete(`https://api.studio-linda.com/api/Appointment/${id}`);\r\n      setAppointments((prev) =>\r\n        prev.filter((appt) => appt.appointmentID !== id),\r\n      );\r\n    } catch (error) {\r\n      console.error('Error deleting appointment:', error);\r\n    }\r\n  };\r\n\r\n  const filteredAppointments = appointments.filter((appt) => {\r\n    if (\r\n      !appt.appointmentDate ||\r\n      isNaN(new Date(appt.appointmentDate).getTime())\r\n    ) {\r\n      console.warn(`Invalid appointment date for ID: ${appt.appointmentID}`);\r\n      return false;\r\n    }\r\n\r\n    // Ensure edited appointments are included based on their updated date\r\n    return (\r\n      new Date(appt.appointmentDate).toISOString().split('T')[0] ===\r\n      selectedDate\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"rounded-sm border border-stroke bg-white px-5 pt-6 pb-2.5 shadow-default sm:px-7.5 xl:pb-1 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-xl font-semibold text-blue-900 dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n          Terminet\r\n        </h1>\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n            className=\"px-4 py-2 border rounded-md mr-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n          />\r\n          <button\r\n            onClick={() => setShowForm(!showForm)}\r\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md\"\r\n          >\r\n            {showForm ? 'X' : 'Shto Terminin'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {showForm && (\r\n        <form onSubmit={handleSubmit} className=\"mt-4\">\r\n          <div className=\"grid grid-cols-2 gap-4 \">\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Emri i Klientit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={newAppointment.firstName}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Mbiemri i Klientit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={newAppointment.lastName}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Numri i Klientit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={newAppointment.phoneNumber}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Email i Klientit\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={newAppointment.email}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shërbimi\r\n              </label>\r\n              <select\r\n                name=\"serviceID\"\r\n                value={newAppointment.serviceID}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              >\r\n                <option value=\"\">Zgjedh Shërbimin</option>\r\n                {servicesList.map((service) => (\r\n                  <option key={service.serviceID} value={service.serviceID}>\r\n                    {service.serviceName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Stafi\r\n              </label>\r\n              <select\r\n                name=\"userID\"\r\n                value={newAppointment.userID}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              >\r\n                <option value=\"\">Zgjedh Stafin</option>\r\n                {staffList.map((staff) => (\r\n                  <option key={staff.userID} value={staff.userID}>\r\n                    {staff.firstName} {staff.lastName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Data e Terminit\r\n              </label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                name=\"appointmentDate\"\r\n                value={newAppointment.appointmentDate}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Statusi i Terminit\r\n              </label>\r\n              <select\r\n                name=\"status\"\r\n                value={newAppointment.status}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              >\r\n                <option value=\"pa përfunduar\">Pa Përfunduar</option>\r\n                <option value=\"përfunduar\">Përfunduar</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shënime\r\n              </label>\r\n              <textarea\r\n                name=\"notes\"\r\n                value={newAppointment.notes}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n          >\r\n            Shto Terminin\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      <div className=\"max-w-full overflow-x-auto mt-6 \">\r\n        <table className=\"w-full table-auto text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n          <thead className=\"bg-gray-200 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n            <tr>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Klienti\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Numri i Klientit\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Email i Klientit\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shërbimi\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Stafi\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Data\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Statusi\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shënimet\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Veptimet\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredAppointments.map((appt) => (\r\n              <React.Fragment key={appt.appointmentID}>\r\n                <tr>\r\n                  <td className=\"py-3 px-4 \">\r\n                    {appt.client?.firstName} {appt.client?.lastName}\r\n                  </td>\r\n                  <td className=\"py-3 px-4\">{appt.client?.phoneNumber}</td>\r\n                  <td className=\"py-3 px-4\">{appt.client?.email}</td>\r\n                  <td className=\"py-3 px-4\">{appt.serviceName}</td>\r\n                  <td className=\"py-3 px-4\">{appt.staffName || 'No Staff'}</td>\r\n\r\n                  <td className=\"py-3 px-4\">\r\n                    {new Date(appt.appointmentDate).toLocaleString()}\r\n                  </td>\r\n                  <td className=\"py-3 px-4\">{appt.status}</td>\r\n                  <td className=\"py-3 px-4\">{appt.notes}</td>\r\n                  <td className=\"py-4 px-4\">\r\n                    <div className=\"flex space-x-2 sm:justify-center\">\r\n                      <button\r\n                        onClick={() => handleEdit(appt)}\r\n                        className=\"bg-blue-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                      >\r\n                        <FaEdit />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDelete(appt.appointmentID)}\r\n                        className=\"bg-red-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                      >\r\n                        <MdOutlineDelete />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                {editingRowId === appt.appointmentID && (\r\n                  <tr>\r\n                    <td\r\n                      colSpan={9}\r\n                      className=\"py-4 px-4 bg-gray-100 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                    >\r\n                      <form onSubmit={handleEditSubmit}>\r\n                        <div className=\"grid grid-cols-2 gap-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                          {/* First Name */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Emri i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"firstName\"\r\n                              value={editFormData.firstName}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Last Name */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Mbiemri i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"lastName\"\r\n                              value={editFormData.lastName}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Phone Number */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Numri i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"phoneNumber\"\r\n                              value={editFormData.phoneNumber}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Email */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Email i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              value={editFormData.email}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Service */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Shërbimi\r\n                            </label>\r\n                            <select\r\n                              name=\"serviceID\"\r\n                              value={editFormData.serviceID || ''} // Ensure the correct value is set\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Zhgjedh Shërbimin</option>\r\n                              {servicesList.map((service) => (\r\n                                <option\r\n                                  key={service.serviceID}\r\n                                  value={service.serviceID}\r\n                                >\r\n                                  {service.serviceName}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Stafi\r\n                            </label>\r\n                            <select\r\n                              name=\"userID\"\r\n                              value={editFormData.userID || ''} // Ensure the correct value is set\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Zgjedh Stafin</option>\r\n                              {staffList.map((staff) => (\r\n                                <option key={staff.userID} value={staff.userID}>\r\n                                  {staff.firstName} {staff.lastName}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Data e Terminit\r\n                            </label>\r\n                            <input\r\n                              type=\"datetime-local\"\r\n                              name=\"appointmentDate\"\r\n                              value={editFormData.appointmentDate}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Status */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Statusi\r\n                            </label>\r\n                            <select\r\n                              name=\"status\"\r\n                              value={editFormData.status}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            >\r\n                              <option value=\"pa përfunduar\">\r\n                                Pa Përfunduar\r\n                              </option>\r\n                              <option value=\"përfunduar\">Përfunduar</option>\r\n                            </select>\r\n                          </div>\r\n\r\n                          {/* Notes */}\r\n                          <div className=\"col-span-2\">\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Shënimet\r\n                            </label>\r\n                            <textarea\r\n                              name=\"notes\"\r\n                              value={editFormData.notes}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Save Changes Button */}\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n                        >\r\n                          Ruaj\r\n                        </button>\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n"],"names":["Appointments","appointments","setAppointments","useState","servicesList","setServicesList","staffList","setStaffList","selectedDate","setSelectedDate","Date","toISOString","split","showForm","setShowForm","editingRowId","setEditingRowId","newAppointment","setNewAppointment","appointmentID","firstName","lastName","phoneNumber","email","userID","serviceID","appointmentDate","status","notes","editFormData","setEditFormData","useEffect","fetchAppointments","fetchServicesList","fetchStaffList","async","response","axios","get","data","error","console","services","Array","isArray","filteredStaff","filter","staff","roleID","handleInputChange","e","name","value","target","handleEditInputChange","handleEditSubmit","preventDefault","payload","client","Number","put","prevAppointments","map","appt","filteredAppointments","isNaN","getTime","warn","_jsxs","className","children","_jsx","type","onChange","onClick","onSubmit","post","_error$response","message","required","service","serviceName","_appt$client9","_appt$client10","_appt$client11","_appt$client12","React","staffName","toLocaleString","_appt$client","_appt$client2","_appt$client3","_appt$client4","_appt$client5","_appt$client6","_appt$client7","_appt$client8","find","isValidDate","slice","handleEdit","FaEdit","delete","id","prev","handleDelete","MdOutlineDelete","colSpan"],"sourceRoot":""}