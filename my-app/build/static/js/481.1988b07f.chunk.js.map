{"version":3,"file":"static/js/481.1988b07f.chunk.js","mappings":"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","sources":["components/CardDataStats.tsx","components/Charts/ChartOne.tsx","components/Charts/ChartThree.tsx","components/Charts/ChartTwo.tsx","components/Chat/ChatCard.tsx","pages/Dashboard/ECommerce.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\ninterface CardDataStatsProps {\r\n  title: string;\r\n  total: string;\r\n  rate: string;\r\n  levelUp?: boolean;\r\n  levelDown?: boolean;\r\n  children: ReactNode;\r\n  className?: string; // Accept className prop\r\n}\r\n\r\nconst CardDataStats: React.FC<CardDataStatsProps> = ({\r\n  title,\r\n  total,\r\n  rate,\r\n  levelUp,\r\n  levelDown,\r\n  children,\r\n  className, // Add className to the props\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`rounded-sm border border-stroke bg-white py-6 px-7.5 shadow-default dark:border-strokedark dark:bg-boxdark ${className}`}\r\n    >\r\n      <div className=\"flex h-11.5 w-11.5 items-center justify-center rounded-full bg-meta-2 dark:bg-meta-4\">\r\n        {children}\r\n      </div>\r\n\r\n      <div className=\"mt-4 flex items-end justify-between\">\r\n        <div>\r\n          <h4 className=\"text-title-md font-bold text-black dark:text-white\">\r\n            {total}\r\n          </h4>\r\n          <span className=\"text-sm font-medium\">{title}</span>\r\n        </div>\r\n\r\n        <span\r\n          className={`flex items-center gap-1 text-sm font-medium ${levelUp && 'text-meta-3'} ${levelDown && 'text-meta-5'}`}\r\n        >\r\n          {rate}\r\n\r\n          {levelUp && (\r\n            <svg\r\n              className=\"fill-meta-3\"\r\n              width=\"10\"\r\n              height=\"11\"\r\n              viewBox=\"0 0 10 11\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M4.35716 2.47737L0.908974 5.82987L5.0443e-07 4.94612L5 0.0848689L10 4.94612L9.09103 5.82987L5.64284 2.47737L5.64284 10.0849L4.35716 10.0849L4.35716 2.47737Z\"\r\n                fill=\"\"\r\n              />\r\n            </svg>\r\n          )}\r\n          {levelDown && (\r\n            <svg\r\n              className=\"fill-meta-5\"\r\n              width=\"10\"\r\n              height=\"11\"\r\n              viewBox=\"0 0 10 11\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M5.64284 7.69237L9.09102 4.33987L10 5.22362L5 10.0849L-8.98488e-07 5.22362L0.908973 4.33987L4.35716 7.69237L4.35716 0.0848701L5.64284 0.0848704L5.64284 7.69237Z\"\r\n                fill=\"\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDataStats;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport axios from 'axios';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\nconst ChartOne: React.FC = () => {\r\n  const [series, setSeries] = useState([\r\n    { name: 'Numri i Takimeve', data: [] },\r\n  ]);\r\n  const [categories, setCategories] = useState<string[]>([]);\r\n  const [colorMode, setColorMode] = useState<string>(\r\n    localStorage.getItem('colorMode') || 'light',\r\n  );\r\n\r\n  useEffect(() => {\r\n    const observer = new MutationObserver(() => {\r\n      const isDark = document.body.classList.contains('dark');\r\n      setColorMode(isDark ? 'dark' : 'light');\r\n    });\r\n    observer.observe(document.body, {\r\n      attributes: true,\r\n      attributeFilter: ['class'],\r\n    });\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchWeeklyData();\r\n  }, []);\r\n\r\n  const fetchWeeklyData = async () => {\r\n    try {\r\n      const startDate = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth(),\r\n        1,\r\n      );\r\n      const endDate = new Date(\r\n        new Date().getFullYear(),\r\n        new Date().getMonth() + 1,\r\n        0,\r\n      );\r\n\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Appointment/appointment-count-weekly',\r\n        {\r\n          params: {\r\n            startDate: startDate.toISOString(),\r\n            endDate: endDate.toISOString(),\r\n          },\r\n        },\r\n      );\r\n\r\n      const data = response.data;\r\n\r\n      // Prepare data for the chart\r\n      const weeks = data.map((entry: { week: number }) => `Java ${entry.week}`);\r\n      const appointmentCounts = data.map(\r\n        (entry: { appointmentCount: number }) => entry.appointmentCount,\r\n      );\r\n\r\n      setCategories(weeks);\r\n      setSeries([{ name: 'Numri i Takimeve', data: appointmentCounts }]);\r\n    } catch (error) {\r\n      console.error('Error fetching weekly appointment data:', error);\r\n    }\r\n  };\r\n\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      type: 'area',\r\n      height: 350,\r\n      toolbar: { show: false },\r\n      background: 'transparent',\r\n    },\r\n    colors: ['#3C50E0'],\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2,\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.3,\r\n        stops: [0, 90, 100],\r\n      },\r\n    },\r\n    grid: {\r\n      borderColor: colorMode === 'dark' ? '#2D3748' : '#E5E7EB',\r\n      xaxis: { lines: { show: true } },\r\n      yaxis: { lines: { show: true } },\r\n    },\r\n    dataLabels: { enabled: false },\r\n    markers: {\r\n      size: 4,\r\n      colors: '#fff',\r\n      strokeColors: ['#3056D3'],\r\n      strokeWidth: 2,\r\n    },\r\n    xaxis: {\r\n      type: 'category',\r\n      categories,\r\n      labels: {\r\n        style: {\r\n          colors: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: { text: '' },\r\n      labels: {\r\n        style: {\r\n          colors: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      labels: {\r\n        colors: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"p-6 rounded-lg max-w-lg mx-auto border border-gray-300 dark:border-gray-700\"\r\n      style={{\r\n        backgroundColor: colorMode === 'dark' ? 'transparent' : '#FFFFFF',\r\n        maxWidth: '900px',\r\n      }}\r\n    >\r\n      <h2\r\n        className=\"text-xl font-semibold text-center mb-4\"\r\n        style={{\r\n          color: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        }}\r\n      >\r\n        Terminet Mujore\r\n      </h2>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"area\"\r\n        height={250}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartOne;\r\n","import { ApexOptions } from 'apexcharts';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport axios from 'axios';\r\n\r\nconst ChartThree: React.FC = () => {\r\n  const [timeRange, setTimeRange] = useState('monthly');\r\n  const [chartData, setChartData] = useState({ labels: [], series: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const colors = [\r\n    '#3C50E0',\r\n    '#6577F3',\r\n    '#8FD0EF',\r\n    '#0FADCF',\r\n    '#1A73E8',\r\n    '#5B73E8',\r\n    '#738AE0',\r\n    '#4A90E2',\r\n    '#002366',\r\n    '#6A5ACD',\r\n    '#9370DB',\r\n    '#8A2BE2',\r\n    '#9400D3',\r\n    '#7B68EE',\r\n    '#6A5ACD',\r\n    '#483D8B',\r\n    '#4169E1',\r\n    '#7C83FD',\r\n    '#6B8E23',\r\n    '#5F9EA0',\r\n  ];\r\n\r\n  const calculateDateRange = () => {\r\n    const now = new Date();\r\n    let startDate, endDate;\r\n\r\n    if (timeRange === 'daily') {\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n      endDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\r\n    } else if (timeRange === 'monthly') {\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n      endDate = new Date(now.getFullYear(), now.getMonth() + 1, 1);\r\n    } else {\r\n      startDate = new Date(now.getFullYear(), 0, 1);\r\n      endDate = new Date(now.getFullYear() + 1, 0, 1);\r\n    }\r\n\r\n    return {\r\n      startDate: startDate.toISOString(),\r\n      endDate: endDate.toISOString(),\r\n    };\r\n  };\r\n\r\n  const fetchChartData = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const { startDate, endDate } = calculateDateRange();\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.studio-linda.com/api/Appointment/services-completed`,\r\n        { params: { startDate, endDate } },\r\n      );\r\n\r\n      console.log('Response Data:', response.data);\r\n\r\n      if (response?.data && Array.isArray(response.data)) {\r\n        const labels = response.data.map((item: any) => item.serviceName);\r\n        const series = response.data.map((item: any) => item.count);\r\n        setChartData({ labels, series });\r\n      } else {\r\n        console.error('Unexpected API response format:', response);\r\n        setError('Unexpected API response format.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n\r\n      if (axios.isAxiosError(err)) {\r\n        setError(`Failed to fetch data: ${err.response?.data || err.message}`);\r\n      } else {\r\n        setError('Failed to load data.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchChartData();\r\n  }, [timeRange]);\r\n\r\n  useEffect(() => {\r\n    console.log('Chart Data:', chartData);\r\n  }, [chartData]);\r\n\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      type: 'donut',\r\n    },\r\n    colors: colors.slice(0, chartData.labels.length),\r\n    labels: chartData.labels,\r\n    legend: { show: true },\r\n    plotOptions: {\r\n      pie: { donut: { size: '65%' } },\r\n    },\r\n    dataLabels: { enabled: false },\r\n  };\r\n\r\n  const isChartDataValid =\r\n    Array.isArray(chartData.series) &&\r\n    chartData.series.length > 0 &&\r\n    Array.isArray(chartData.labels) &&\r\n    chartData.labels.length > 0;\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h5 className=\"text-blue-900 dark:text-white\">\r\n          Shërbimet më të Shpesha\r\n        </h5>\r\n        <select\r\n          value={timeRange}\r\n          onChange={(e) => setTimeRange(e.target.value)}\r\n        >\r\n          <option value=\"daily\">Ditore</option>\r\n          <option value=\"monthly\">Mujore</option>\r\n          <option value=\"yearly\">Vjetore</option>\r\n        </select>\r\n      </div>\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n      {!loading && !error && isChartDataValid ? (\r\n        <ReactApexChart\r\n          options={options}\r\n          series={chartData.series}\r\n          type=\"donut\"\r\n        />\r\n      ) : (\r\n        <p>No valid data available to display.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartThree;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport axios from 'axios';\r\nimport { startOfWeek, endOfWeek, format } from 'date-fns';\r\n\r\nconst ChartTwo: React.FC = () => {\r\n  const [appointmentsPerDay, setAppointmentsPerDay] = useState<number[]>([]); // Holds the number of appointments for each day\r\n  const [colorMode, setColorMode] = useState<string>(\r\n    localStorage.getItem('colorMode') || 'light',\r\n  );\r\n\r\n  // Toggle between dark and light mode\r\n  useEffect(() => {\r\n    const observer = new MutationObserver(() => {\r\n      const isDark = document.body.classList.contains('dark');\r\n      setColorMode(isDark ? 'dark' : 'light');\r\n    });\r\n    observer.observe(document.body, {\r\n      attributes: true,\r\n      attributeFilter: ['class'],\r\n    });\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  // Fetch weekly data\r\n  const fetchWeeklyData = async () => {\r\n    try {\r\n      const startOfCurrentWeek = startOfWeek(new Date(), { weekStartsOn: 1 });\r\n      const endOfCurrentWeek = endOfWeek(new Date(), { weekStartsOn: 1 });\r\n\r\n      console.log('Start of Current Week:', startOfCurrentWeek);\r\n      console.log('End of Current Week:', endOfCurrentWeek);\r\n\r\n      const formattedStartDate = format(startOfCurrentWeek, 'yyyy-MM-dd');\r\n      const formattedEndDate = format(endOfCurrentWeek, 'yyyy-MM-dd');\r\n\r\n      // Fetching the completed appointments data from the API\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Appointment/appointments-completed-by-day',\r\n        {\r\n          params: {\r\n            startDate: formattedStartDate,\r\n            endDate: formattedEndDate,\r\n          },\r\n        },\r\n      );\r\n\r\n      console.log('API Response:', response.data);\r\n\r\n      // Map the response data to appointments count for each day\r\n      const dailyAppointments = response.data.map(\r\n        (entry: { completedAppointments: number }) =>\r\n          entry.completedAppointments,\r\n      );\r\n\r\n      console.log('Mapped Appointments:', dailyAppointments); // Log the mapped data\r\n\r\n      // Update the state with the data\r\n      setAppointmentsPerDay(dailyAppointments);\r\n    } catch (error) {\r\n      console.error('Error fetching weekly data:', error);\r\n      setAppointmentsPerDay([0, 0, 0, 0, 0, 0, 0]); // Default to 0 if error occurs\r\n    }\r\n  };\r\n\r\n  // Fetch data when component mounts\r\n  useEffect(() => {\r\n    fetchWeeklyData();\r\n  }, []);\r\n\r\n  const daysOfWeek = [\r\n    'E Hënë',\r\n    'E Martë',\r\n    'E Mërkurë',\r\n    'E Enjte',\r\n    'E Premte',\r\n    'E Shtunë',\r\n    'E Diel',\r\n  ];\r\n\r\n  // Chart options\r\n  const options = {\r\n    chart: {\r\n      type: 'bar',\r\n      height: 250,\r\n      toolbar: { show: false },\r\n      background: 'transparent',\r\n    },\r\n    plotOptions: {\r\n      bar: { columnWidth: '50%', borderRadius: 4 },\r\n    },\r\n    xaxis: {\r\n      categories: daysOfWeek,\r\n      labels: {\r\n        style: {\r\n          colors: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Terminet',\r\n        style: {\r\n          color: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        },\r\n      },\r\n      labels: {\r\n        style: {\r\n          colors: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        },\r\n      },\r\n    },\r\n    grid: {\r\n      borderColor: colorMode === 'dark' ? '#2D3748' : '#E5E7EB',\r\n    },\r\n    dataLabels: { enabled: false },\r\n    colors: ['#2563EB'],\r\n  };\r\n\r\n  // Data for the chart\r\n  const series = [{ name: 'Terminet', data: appointmentsPerDay }];\r\n\r\n  return (\r\n    <div\r\n      className=\"p-6 rounded-lg max-w-lg mx-auto border border-gray-300 dark:border-gray-700\"\r\n      style={{\r\n        backgroundColor: colorMode === 'dark' ? 'transparent' : '#FFFFFF',\r\n      }}\r\n    >\r\n      <h2\r\n        className=\"text-xl font-semibold text-center mb-4\"\r\n        style={{\r\n          color: colorMode === 'dark' ? '#FFFFFF' : '#374151',\r\n        }}\r\n      >\r\n        Terminet Javore\r\n      </h2>\r\n      <ReactApexChart\r\n        options={options}\r\n        series={series}\r\n        type=\"bar\"\r\n        height={250}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartTwo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface Customer {\r\n  name: string;\r\n  completedAppointments: number;\r\n}\r\n\r\nconst BestCustomersCard = () => {\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const colors = [\r\n    '#3C50E0',\r\n    '#6577F3',\r\n    '#8FD0EF',\r\n    '#0FADCF',\r\n    '#6A5ACD',\r\n    '#7B68EE',\r\n    '#8A2BE2',\r\n    '#9370DB',\r\n    '#483D8B',\r\n    '#4169E1',\r\n  ];\r\n\r\n  const fetchBestCustomers = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Appointment/top-customers',\r\n      );\r\n\r\n      if (response?.data && Array.isArray(response.data)) {\r\n        setCustomers(response.data);\r\n      } else {\r\n        setError('Formati i përgjigjes API është i papritur.');\r\n      }\r\n    } catch (err) {\r\n      setError('Dështoi ngarkimi i klientëve më të mirë.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBestCustomers();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Po ngarkohet...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"text-red-500\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-span-12 rounded-sm border border-stroke m-7 p-5 bg-white py-6 shadow-default dark:border-strokedark dark:bg-boxdark xl:col-span-4\">\r\n      <h4 className=\"mb-6 px-7.5 text-xl font-semibold text-black dark:text-white\">\r\n        10 Klientët më të rregullt\r\n      </h4>\r\n\r\n      <div>\r\n        {customers.map((customer, key) => (\r\n          <div\r\n            className=\"flex items-center gap-5 py-3 px-7.5 hover:bg-gray-3 dark:hover:bg-meta-4\"\r\n            key={key}\r\n          >\r\n            <div\r\n              className=\"relative h-14 w-14 flex items-center justify-center font-bold text-white\"\r\n              style={{\r\n                backgroundColor: colors[key % colors.length],\r\n                borderRadius: '5px',\r\n              }}\r\n            >\r\n              {customer.name.charAt(0).toUpperCase()}\r\n            </div>\r\n\r\n            <div className=\"flex flex-1 items-center justify-between\">\r\n              <div>\r\n                <h5 className=\"font-medium text-black dark:text-white\">\r\n                  {customer.name}\r\n                </h5>\r\n                <p className=\"text-sm text-black dark:text-white\">\r\n                  {customer.completedAppointments} Takime të Përfunduara\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BestCustomersCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CardDataStats from '../../components/CardDataStats';\r\nimport ChartOne from '../../components/Charts/ChartOne';\r\nimport ChartThree from '../../components/Charts/ChartThree';\r\nimport ChartTwo from '../../components/Charts/ChartTwo';\r\nimport ChatCard from '../../components/Chat/ChatCard';\r\nimport MapOne from '../../components/Maps/MapOne';\r\nimport TableOne from '../../components/Tables/TableOne';\r\nimport axios from 'axios';\r\n\r\nconst ECommerce: React.FC = () => {\r\n  const [totalStaff, setTotalStaff] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState<number>(0);\r\n  const [totalServices, setTotalServices] = useState(0);\r\n  const [completedAppointments, setCompletedAppointments] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchTotalStaff = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          'https://api.studio-linda.com/api/User/total-staff',\r\n          // 'https://localhost:7158/api/User/total-staff',\r\n        );\r\n        setTotalStaff(response.data.totalStaff);\r\n      } catch (error) {\r\n        console.error('Error fetching total staff:', error);\r\n      }\r\n    };\r\n\r\n    const fetchTotalPrice = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          'https://api.studio-linda.com/api/Appointment/total-price',\r\n          // 'https://localhost:7158/api/Appointment/total-price',\r\n        );\r\n        setTotalPrice(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching total price:', error);\r\n      }\r\n    };\r\n    const fetchTotalServices = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          'https://api.studio-linda.com/api/Service/total-services',\r\n          // 'https://localhost:7158/api/Service/total-services',\r\n        );\r\n        setTotalServices(response.data.totalServices);\r\n      } catch (error) {\r\n        console.error('Error fetching total services:', error);\r\n      }\r\n    };\r\n    const fetchCompletedAppointments = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          'https://api.studio-linda.com/api/Appointment/total-completed-appointments',\r\n          // 'https://localhost:7158/api/Appointment/total-completed-appointments',\r\n        );\r\n        setCompletedAppointments(response.data.completedAppointmentsCount);\r\n      } catch (error) {\r\n        console.error('Error fetching completed appointments:', error);\r\n      }\r\n    };\r\n\r\n    fetchCompletedAppointments();\r\n    fetchTotalServices();\r\n    fetchTotalStaff();\r\n    fetchTotalPrice();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-1 gap-2 md:grid-cols-2 md:gap-6 xl:grid-cols-4 2xl:gap-7.5 dark:text-white text-black\">\r\n        <CardDataStats\r\n          title=\"Numri i Stafit\"\r\n          total={`${totalStaff}`}\r\n          rate=\"0.43%\"\r\n          levelUp\r\n          className=\"p-4\"\r\n        >\r\n          <svg\r\n            className=\"w-10 h-10 text-gray-800 dark:text-white\"\r\n            aria-hidden=\"true\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"80\"\r\n            height=\"80\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M12 4a4 4 0 1 0 0 8 4 4 0 0 0 0-8Zm-2 9a4 4 0 0 0-4 4v1a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2v-1a4 4 0 0 0-4-4h-4Z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </CardDataStats>\r\n\r\n        <CardDataStats\r\n          title=\"Fitimi total\"\r\n          total={`${totalPrice.toFixed(2)}€`}\r\n          rate=\"4.35%\"\r\n          levelUp\r\n          className=\"p-4\"\r\n        >\r\n          <svg\r\n            className=\"w-10 h-10 text-gray-800 dark:text-white\"\r\n            aria-hidden=\"true\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path\r\n              stroke=\"currentColor\"\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              stroke-width=\"2\"\r\n              d=\"M6 10h9.231M6 14h9.231M18 5.086A5.95 5.95 0 0 0 14.615 4c-3.738 0-6.769 3.582-6.769 8s3.031 8 6.769 8A5.94 5.94 0 0 0 18 18.916\"\r\n            />\r\n          </svg>\r\n        </CardDataStats>\r\n\r\n        <CardDataStats\r\n          title=\"Numri i Shërbimeve\"\r\n          total={`${totalServices}`}\r\n          rate=\"0.43%\"\r\n          levelUp\r\n          className=\"p-4\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke-width=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-10 h-10 text-gray-800 dark:text-white\"\r\n          >\r\n            <path\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              d=\"m7.848 8.25 1.536.887M7.848 8.25a3 3 0 1 1-5.196-3 3 3 0 0 1 5.196 3Zm1.536.887a2.165 2.165 0 0 1 1.083 1.839c.005.351.054.695.14 1.024M9.384 9.137l2.077 1.199M7.848 15.75l1.536-.887m-1.536.887a3 3 0 1 1-5.196 3 3 3 0 0 1 5.196-3Zm1.536-.887a2.165 2.165 0 0 0 1.083-1.838c.005-.352.054-.695.14-1.025m-1.223 2.863 2.077-1.199m0-3.328a4.323 4.323 0 0 1 2.068-1.379l5.325-1.628a4.5 4.5 0 0 1 2.48-.044l.803.215-7.794 4.5m-2.882-1.664A4.33 4.33 0 0 0 10.607 12m3.736 0 7.794 4.5-.802.215a4.5 4.5 0 0 1-2.48-.043l-5.326-1.629a4.324 4.324 0 0 1-2.068-1.379M14.343 12l-2.882 1.664\"\r\n            />\r\n          </svg>\r\n        </CardDataStats>\r\n\r\n        <CardDataStats\r\n          title=\"Terminet e Përfunduara\"\r\n          total={`${completedAppointments}`}\r\n          rate=\"0.95%\"\r\n          levelDown\r\n          className=\"p-4\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke-width=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-10 h-10 text-gray-800 dark:text-white\"\r\n          >\r\n            <path\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              d=\"M9 12.75 11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 0 1-1.043 3.296 3.745 3.745 0 0 1-3.296 1.043A3.745 3.745 0 0 1 12 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 0 1-3.296-1.043 3.745 3.745 0 0 1-1.043-3.296A3.745 3.745 0 0 1 3 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 0 1 1.043-3.296 3.746 3.746 0 0 1 3.296-1.043A3.746 3.746 0 0 1 12 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 0 1 3.296 1.043 3.746 3.746 0 0 1 1.043 3.296A3.745 3.745 0 0 1 21 12Z\"\r\n            />\r\n          </svg>\r\n        </CardDataStats>\r\n      </div>\r\n\r\n      <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6 2xl:gap-7.5\">\r\n        <div className=\"col-span-1\">\r\n          <ChartOne />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <ChartTwo />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <ChartThree />\r\n        </div>\r\n        <div className=\"col-span-1\">\r\n          <ChatCard />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ECommerce;\r\n"],"names":["_ref","title","total","rate","levelUp","levelDown","children","className","_jsxs","_jsx","width","height","viewBox","fill","xmlns","d","ChartOne","series","setSeries","useState","name","data","categories","setCategories","colorMode","setColorMode","localStorage","getItem","useEffect","observer","MutationObserver","isDark","document","body","classList","contains","observe","attributes","attributeFilter","disconnect","fetchWeeklyData","async","startDate","Date","getFullYear","getMonth","endDate","axios","get","params","toISOString","weeks","map","entry","week","appointmentCounts","appointmentCount","error","console","options","chart","type","toolbar","show","background","colors","stroke","curve","gradient","shadeIntensity","opacityFrom","opacityTo","stops","grid","borderColor","xaxis","lines","yaxis","dataLabels","enabled","markers","size","strokeColors","strokeWidth","labels","style","text","legend","position","horizontalAlign","backgroundColor","maxWidth","color","ReactApexChart","ChartThree","timeRange","setTimeRange","chartData","setChartData","loading","setLoading","setError","fetchChartData","calculateDateRange","now","getDate","response","log","Array","isArray","item","serviceName","count","err","_err$response","isAxiosError","message","slice","length","plotOptions","pie","donut","isChartDataValid","value","onChange","e","target","ChartTwo","appointmentsPerDay","setAppointmentsPerDay","startOfCurrentWeek","startOfWeek","weekStartsOn","endOfCurrentWeek","endOfWeek","formattedStartDate","format","formattedEndDate","dailyAppointments","completedAppointments","bar","columnWidth","borderRadius","BestCustomersCard","customers","setCustomers","fetchBestCustomers","customer","key","charAt","toUpperCase","ECommerce","totalStaff","setTotalStaff","totalPrice","setTotalPrice","totalServices","setTotalServices","setCompletedAppointments","completedAppointmentsCount","fetchCompletedAppointments","fetchTotalServices","fetchTotalStaff","fetchTotalPrice","_Fragment","CardDataStats","toFixed","ChatCard"],"sourceRoot":""}