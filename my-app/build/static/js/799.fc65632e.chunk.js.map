{"version":3,"file":"static/js/799.fc65632e.chunk.js","mappings":"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","sources":["pages/ServiceDiscount.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\n\r\nconst ServiceDiscount = ({\r\n  updateServiceList,\r\n  searchQuery,\r\n}: {\r\n  updateServiceList: () => void;\r\n  searchQuery: string;\r\n}) => {\r\n  const [discounts, setDiscounts] = useState<any[]>([]);\r\n  const [services, setServices] = useState<any[]>([]);\r\n  const [newDiscount, setNewDiscount] = useState({\r\n    serviceID: [] as string[],\r\n    discountPercentage: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n  const [editingServiceDiscountID, setEditingServiceDiscountID] = useState<\r\n    number | null\r\n  >(null);\r\n  const [editFormData, setEditFormData] = useState({\r\n    serviceDiscountID: '',\r\n    serviceID: [] as string[],\r\n    discountPercentage: '',\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchDiscounts();\r\n    fetchServices();\r\n  }, []);\r\n\r\n  const fetchDiscounts = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/ServiceDiscount',\r\n      );\r\n      setDiscounts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching discounts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchServices = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Service',\r\n      );\r\n      setServices(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const newDiscountData = {\r\n      serviceIDs: newDiscount.serviceID.map((id) => parseInt(id, 10)),\r\n      discountPercentage: parseFloat(newDiscount.discountPercentage),\r\n      startDate: new Date(newDiscount.startDate + 'T00:00:00').toISOString(),\r\n      endDate: new Date(newDiscount.endDate + 'T00:00:00').toISOString(),\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://api.studio-linda.com/api/ServiceDiscount',\r\n        newDiscountData,\r\n      );\r\n      setDiscounts([...discounts, response.data]);\r\n      setShowAddForm(false);\r\n      setNewDiscount({\r\n        serviceID: [] as string[],\r\n        discountPercentage: '',\r\n        startDate: '',\r\n        endDate: '',\r\n      });\r\n      updateServiceList();\r\n    } catch (error) {\r\n      console.error('Error adding discount:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (discount: any) => {\r\n    if (editingServiceDiscountID === discount.serviceDiscountID) {\r\n      setEditingServiceDiscountID(null);\r\n    } else {\r\n      setEditingServiceDiscountID(discount.serviceDiscountID);\r\n      setEditFormData({\r\n        serviceDiscountID: discount.serviceDiscountID,\r\n        serviceID: discount.serviceIDs.map((id: number) => id.toString()),\r\n        discountPercentage: discount.discountPercentage.toString(),\r\n        startDate: discount.startDate.split('T')[0],\r\n        endDate: discount.endDate.split('T')[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (!editFormData.startDate || !editFormData.endDate) {\r\n        alert('Dates cannot be empty.');\r\n        return;\r\n      }\r\n\r\n      const parsedStartDate = new Date(editFormData.startDate + 'T00:00:00');\r\n      const parsedEndDate = new Date(editFormData.endDate + 'T00:00:00');\r\n\r\n      if (isNaN(parsedStartDate.getTime()) || isNaN(parsedEndDate.getTime())) {\r\n        alert('Invalid date format. Please ensure the dates are valid.');\r\n        return;\r\n      }\r\n\r\n      if (parsedStartDate >= parsedEndDate) {\r\n        alert('Start date must be earlier than the end date.');\r\n        return;\r\n      }\r\n\r\n      const updatedDiscount = {\r\n        serviceDiscountID: editingServiceDiscountID,\r\n        serviceIDs: editFormData.serviceID.map((id) => parseInt(id, 10)),\r\n        discountPercentage: parseFloat(editFormData.discountPercentage),\r\n        startDate: parsedStartDate.toISOString(),\r\n        endDate: parsedEndDate.toISOString(),\r\n      };\r\n\r\n      await axios.put(\r\n        `https://api.studio-linda.com/api/ServiceDiscount/${editingServiceDiscountID}`,\r\n        updatedDiscount,\r\n      );\r\n\r\n      setDiscounts((prev) =>\r\n        prev.map((discount) =>\r\n          discount.serviceDiscountID === editingServiceDiscountID\r\n            ? { ...discount, ...updatedDiscount }\r\n            : discount,\r\n        ),\r\n      );\r\n\r\n      setEditingServiceDiscountID(null);\r\n      updateServiceList();\r\n    } catch (error) {\r\n      console.error('Error updating discount:', error);\r\n      alert('Error updating discount. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await axios.delete(\r\n        `https://api.studio-linda.com/api/ServiceDiscount/${id}`,\r\n      );\r\n      setDiscounts((prev) =>\r\n        prev.filter((discount) => discount.serviceDiscountID !== id),\r\n      );\r\n      updateServiceList();\r\n    } catch (error) {\r\n      console.error('Error deleting discount:', error);\r\n    }\r\n  };\r\n\r\n  // Filter discounts based on search query\r\n  const filteredDiscounts = discounts.filter((discount) => {\r\n    const serviceNames = discount.serviceIDs\r\n      .map((id: number) => {\r\n        const service = services.find((s) => s.serviceID === id);\r\n        return service?.serviceName.toLowerCase() || '';\r\n      })\r\n      .join(', ');\r\n    return serviceNames.includes(searchQuery.toLowerCase());\r\n  });\r\n\r\n  const activeDiscounts = filteredDiscounts.filter(\r\n    (discount) =>\r\n      new Date(discount.startDate) <= new Date() &&\r\n      new Date(discount.endDate) >= new Date(),\r\n  );\r\n\r\n  const inactiveDiscounts = filteredDiscounts.filter(\r\n    (discount) =>\r\n      new Date(discount.endDate) < new Date() ||\r\n      new Date(discount.startDate) > new Date(),\r\n  );\r\n\r\n  const renderTable = (discounts: any[], title: string) => (\r\n    <>\r\n      <h2 className=\"text-xl font-semibold mb-2 dark:text-white text-blue-900\">\r\n        {title}\r\n      </h2>\r\n      <table className=\"w-full border-collapse border mb-6 text-black dark:text-white rounded-md w-full dark:border-strokedark dark:bg-boxdark\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-4 py-2 dark:border-strokedark dark:bg-boxdark text-black dark:text-white\">\r\n              Shërbimi\r\n            </th>\r\n            <th className=\"border px-4 py-2 dark:border-strokedark dark:bg-boxdark text-black dark:text-white\">\r\n              Çmimi Aktual\r\n            </th>\r\n            <th className=\"border px-4 py-2 dark:border-strokedark dark:bg-boxdark text-black dark:text-white\">\r\n              Zbritja (%)\r\n            </th>\r\n            <th className=\"border px-4 py-2 dark:border-strokedark dark:bg-boxdark text-black dark:text-white\">\r\n              Data e Fillimit\r\n            </th>\r\n            <th className=\"border px-4 py-2 dark:border-strokedark dark:bg-boxdark text-black dark:text-white\">\r\n              Data e Mbarimit\r\n            </th>\r\n            <th className=\"border px-4 py-2 dark:border-strokedark dark:bg-boxdark text-black dark:text-white\">\r\n              Veprimet\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {discounts.map((discount) => (\r\n            <React.Fragment key={discount.serviceDiscountID}>\r\n              <tr>\r\n                <td className=\"border px-4 py-2\">\r\n                  {discount.serviceIDs\r\n                    ?.map((id: number) => {\r\n                      const service = services.find((s) => s.serviceID === id);\r\n                      return service?.serviceName || 'I panjohur';\r\n                    })\r\n                    .join(', ') || 'I panjohur'}\r\n                </td>\r\n                <td className=\"border px-4 py-2\">\r\n                  {discount.serviceIDs\r\n                    ?.map((id: number) => {\r\n                      const service = services.find((s) => s.serviceID === id);\r\n                      return service?.price || 'I panjohur';\r\n                    })\r\n                    .join(', ') || 'I panjohur'}\r\n                </td>\r\n                <td className=\"border px-4 py-2\">\r\n                  {discount.discountPercentage}%\r\n                </td>\r\n                <td className=\"border px-4 py-2\">\r\n                  {new Date(discount.startDate).toLocaleDateString()}\r\n                </td>\r\n                <td className=\"border px-4 py-2\">\r\n                  {new Date(discount.endDate).toLocaleDateString()}\r\n                </td>\r\n                <td className=\"py-4 px-4\">\r\n                  <div className=\"flex space-x-2 sm:justify-center\">\r\n                    <button\r\n                      onClick={() => handleEdit(discount)}\r\n                      className=\"bg-blue-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                    >\r\n                      <FaEdit />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(discount.serviceDiscountID)}\r\n                      className=\"bg-red-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                    >\r\n                      <MdOutlineDelete />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {editingServiceDiscountID === discount.serviceDiscountID && (\r\n                <tr>\r\n                  <td\r\n                    colSpan={6}\r\n                    className=\"py-4 px-4 bg-gray-100 dark:bg-boxdark\"\r\n                  >\r\n                    <form onSubmit={handleEditSubmit}>\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 dark:text-white\">\r\n                            Shërbimet\r\n                          </label>\r\n                          <select\r\n                            name=\"serviceID\"\r\n                            value={editFormData.serviceID}\r\n                            onChange={(e) =>\r\n                              setEditFormData({\r\n                                ...editFormData,\r\n                                serviceID: Array.from(\r\n                                  e.target.selectedOptions,\r\n                                ).map((opt) => opt.value),\r\n                              })\r\n                            }\r\n                            multiple\r\n                            className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                          >\r\n                            {services.map((service) => (\r\n                              <option\r\n                                key={service.serviceID}\r\n                                value={service.serviceID}\r\n                              >\r\n                                {service.serviceName}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 dark:text-white\">\r\n                            Zbritja (%)\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"discountPercentage\"\r\n                            value={editFormData.discountPercentage}\r\n                            onChange={(e) =>\r\n                              setEditFormData({\r\n                                ...editFormData,\r\n                                discountPercentage: e.target.value,\r\n                              })\r\n                            }\r\n                            className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 dark:text-white\">\r\n                            Data e Fillimit\r\n                          </label>\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"startDate\"\r\n                            value={editFormData.startDate}\r\n                            onChange={(e) =>\r\n                              setEditFormData({\r\n                                ...editFormData,\r\n                                startDate: e.target.value,\r\n                              })\r\n                            }\r\n                            className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 dark:text-white\">\r\n                            Data e Mbarimit\r\n                          </label>\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"endDate\"\r\n                            value={editFormData.endDate}\r\n                            onChange={(e) =>\r\n                              setEditFormData({\r\n                                ...editFormData,\r\n                                endDate: e.target.value,\r\n                              })\r\n                            }\r\n                            className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex justify-end space-x-2 mt-4\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n                        >\r\n                          Ruaj\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => setEditingServiceDiscountID(null)}\r\n                          className=\"px-4 py-2 bg-gray-400 text-white rounded-md\"\r\n                        >\r\n                          Anulo\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 dark:text-white text-blue-900\">\r\n      <div className=\"flex justify-between items-center mb-4 \">\r\n        <h1 className=\"text-2xl font-bold dark:text-white text-blue-900\">\r\n          Menaxhimi i Zbritjeve\r\n        </h1>\r\n        <button\r\n          onClick={() => setShowAddForm(!showAddForm)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n        >\r\n          {showAddForm ? 'X' : 'Shto Zbritje'}\r\n        </button>\r\n      </div>\r\n      {showAddForm && (\r\n        <form onSubmit={handleAddSubmit} className=\"mb-6\">\r\n          <div className=\"grid grid-cols-2 gap-4 \">\r\n            <div>\r\n              <label className=\"block font-medium\">Shërbimet</label>\r\n              <select\r\n                multiple\r\n                value={newDiscount.serviceID}\r\n                onChange={(e) =>\r\n                  setNewDiscount({\r\n                    ...newDiscount,\r\n                    serviceID: Array.from(e.target.selectedOptions).map(\r\n                      (opt) => opt.value,\r\n                    ),\r\n                  })\r\n                }\r\n                className=\"border rounded px-2 py-1 w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark \"\r\n              >\r\n                {services.map((service) => (\r\n                  <option key={service.serviceID} value={service.serviceID}>\r\n                    {service.serviceName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium\">Zbritja (%)</label>\r\n              <input\r\n                type=\"number\"\r\n                value={newDiscount.discountPercentage}\r\n                onChange={(e) =>\r\n                  setNewDiscount({\r\n                    ...newDiscount,\r\n                    discountPercentage: e.target.value,\r\n                  })\r\n                }\r\n                className=\"border rounded px-2 py-1 w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium\">Data e Fillimit</label>\r\n              <input\r\n                type=\"date\"\r\n                value={newDiscount.startDate}\r\n                onChange={(e) =>\r\n                  setNewDiscount({ ...newDiscount, startDate: e.target.value })\r\n                }\r\n                className=\"border rounded px-2 py-1 w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium\">Data e Mbarimit</label>\r\n              <input\r\n                type=\"date\"\r\n                value={newDiscount.endDate}\r\n                onChange={(e) =>\r\n                  setNewDiscount({ ...newDiscount, endDate: e.target.value })\r\n                }\r\n                className=\"border rounded px-2 py-1 w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-blue-500 text-white px-4 py-2 rounded mt-4\"\r\n          >\r\n            Shto Zbritje\r\n          </button>\r\n        </form>\r\n      )}\r\n      {renderTable(activeDiscounts, 'Zbritjet Aktive')}\r\n      {renderTable(inactiveDiscounts, 'Zbritjet Joaktive')}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceDiscount;\r\n"],"names":["_ref","updateServiceList","searchQuery","discounts","setDiscounts","useState","services","setServices","newDiscount","setNewDiscount","serviceID","discountPercentage","startDate","endDate","editingServiceDiscountID","setEditingServiceDiscountID","editFormData","setEditFormData","serviceDiscountID","showAddForm","setShowAddForm","useEffect","fetchDiscounts","fetchServices","async","response","axios","get","data","error","console","handleEditSubmit","e","preventDefault","alert","parsedStartDate","Date","parsedEndDate","isNaN","getTime","updatedDiscount","serviceIDs","map","id","parseInt","parseFloat","toISOString","put","prev","discount","filteredDiscounts","filter","service","find","s","serviceName","toLowerCase","join","includes","activeDiscounts","inactiveDiscounts","renderTable","title","_jsxs","_Fragment","children","_jsx","className","_discount$serviceIDs","_discount$serviceIDs2","React","price","toLocaleDateString","onClick","toString","split","handleEdit","FaEdit","delete","handleDelete","MdOutlineDelete","colSpan","onSubmit","name","value","onChange","Array","from","target","selectedOptions","opt","multiple","type","required","newDiscountData","post"],"sourceRoot":""}