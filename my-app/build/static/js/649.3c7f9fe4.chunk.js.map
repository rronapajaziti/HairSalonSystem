{"version":3,"file":"static/js/649.3c7f9fe4.chunk.js","mappings":"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","sources":["pages/Appointments.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\n\r\nconst Appointments = () => {\r\n  const [appointments, setAppointments] = useState<any[]>([]);\r\n  const [servicesList, setServicesList] = useState<any[]>([]);\r\n  const [staffList, setStaffList] = useState<any[]>([]);\r\n  const [selectedDate, setSelectedDate] = useState<string>(\r\n    new Date().toISOString().split('T')[0],\r\n  );\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingRowId, setEditingRowId] = useState<number | null>(null);\r\n\r\n  const [newAppointment, setNewAppointment] = useState({\r\n    appointmentID: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    userID: '',\r\n    serviceIDs: [],\r\n    appointmentDate: '',\r\n    status: 'pa përfunduar',\r\n    notes: '',\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    appointmentID: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    userID: '',\r\n    serviceIDs: [],\r\n    appointmentDate: '',\r\n    status: 'pa përfunduar',\r\n    notes: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n    fetchServicesList();\r\n    fetchStaffList();\r\n  }, []);\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Appointment',\r\n      );\r\n      setAppointments(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n    }\r\n  };\r\n\r\n  const fetchServicesList = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Service',\r\n      );\r\n\r\n      // Directly use response.data since it's already an array\r\n      const services = Array.isArray(response.data) ? response.data : [];\r\n\r\n      // Save to state\r\n      setServicesList(services);\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n      setServicesList([]); // Ensure services list is an empty array on error\r\n    }\r\n  };\r\n\r\n  const fetchStaffList = async () => {\r\n    try {\r\n      const response = await axios.get('https://api.studio-linda.com/api/User');\r\n\r\n      // Filter only staff with roleID 2 or 3\r\n      const filteredStaff = response.data.filter(\r\n        (staff: any) => staff.roleID === 2 || staff.roleID === 3,\r\n      );\r\n\r\n      setStaffList(filteredStaff);\r\n    } catch (error) {\r\n      console.error('Error fetching staff:', error);\r\n      setStaffList([]); // Fallback to an empty list in case of an error\r\n    }\r\n  };\r\n\r\n  // Handle multiple service selection for new appointment\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<\r\n      HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement\r\n    >,\r\n  ) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'serviceIDs') {\r\n      // Narrow the type to HTMLSelectElement\r\n      const options = (e.target as HTMLSelectElement).selectedOptions;\r\n      const values = Array.from(options).map(\r\n        (option: HTMLOptionElement) => option.value,\r\n      );\r\n      setNewAppointment({\r\n        ...newAppointment,\r\n        [name]: values, // Set serviceIDs as an array of selected values\r\n      });\r\n    } else {\r\n      setNewAppointment({ ...newAppointment, [name]: value });\r\n    }\r\n  };\r\n\r\n  // For editing appointment\r\n  const handleEditInputChange = (\r\n    e: React.ChangeEvent<\r\n      HTMLSelectElement | HTMLInputElement | HTMLTextAreaElement\r\n    >,\r\n  ) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'serviceIDs') {\r\n      // Narrow the type to HTMLSelectElement\r\n      const options = (e.target as HTMLSelectElement).selectedOptions;\r\n      const values = Array.from(options).map(\r\n        (option: HTMLOptionElement) => option.value,\r\n      );\r\n      setEditFormData({\r\n        ...editFormData,\r\n        [name]: values, // Set serviceIDs as an array of selected values\r\n      });\r\n    } else {\r\n      setEditFormData({ ...editFormData, [name]: value });\r\n    }\r\n  };\r\n\r\n  //UserID: localStorage.getItem('userId'),\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Convert serviceIDs to numbers\r\n    const serviceIDsAsNumbers = newAppointment.serviceIDs.map((id) =>\r\n      Number(id),\r\n    );\r\n\r\n    const payload = {\r\n      client: {\r\n        firstName: newAppointment.firstName,\r\n        lastName: newAppointment.lastName,\r\n        phoneNumber: newAppointment.phoneNumber,\r\n        email: newAppointment.email,\r\n      },\r\n      appointmentID: newAppointment.appointmentID || 0, // Ensure a valid ID\r\n      userID: Number(newAppointment.userID), // Convert userID to number\r\n      serviceIDs: serviceIDsAsNumbers, // Ensure serviceIDs is an array of numbers\r\n      appointmentDate: newAppointment.appointmentDate,\r\n      status: newAppointment.status,\r\n      notes: newAppointment.notes,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://api.studio-linda.com/api/Appointment',\r\n        payload,\r\n      );\r\n      fetchAppointments();\r\n      // Update state with the new appointment\r\n      setAppointments([...appointments, response.data]);\r\n\r\n      // Reset form and close it\r\n      setShowForm(false);\r\n      setNewAppointment({\r\n        appointmentID: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        userID: '',\r\n        serviceIDs: [],\r\n        appointmentDate: '',\r\n        status: 'pa përfunduar',\r\n        notes: '',\r\n      });\r\n    } catch (error) {\r\n      console.error(\r\n        'Error adding appointment:',\r\n        error.response?.data || error.message,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEdit = (appt: any) => {\r\n    if (editingRowId === appt.appointmentID) {\r\n      // Cancel edit mode if clicking the same edit button again\r\n      setEditingRowId(null);\r\n      setEditFormData({\r\n        appointmentID: appt.appointmentID,\r\n        firstName: appt.client?.firstName || '',\r\n        lastName: appt.client?.lastName || '',\r\n        phoneNumber: appt.client?.phoneNumber || '',\r\n        email: appt.client?.email || '',\r\n        userID: appt.userID || '',\r\n        serviceIDs:\r\n          appt.services?.map((service: { serviceName: string }) => {\r\n            const matchedService = servicesList.find(\r\n              (s) => s.serviceName === service.serviceName,\r\n            );\r\n            return matchedService?.serviceID?.toString() || '';\r\n          }) || [],\r\n        appointmentDate: appt.appointmentDate\r\n          ? new Date(appt.appointmentDate).toISOString().slice(0, 16)\r\n          : '',\r\n        status: appt.status || 'pa përfunduar',\r\n        notes: appt.notes || '',\r\n      });\r\n    } else {\r\n      const staff = staffList.find(\r\n        (staff) => `${staff.firstName} ${staff.lastName}` === appt.staffName,\r\n      );\r\n\r\n      // Set form data for editing, including mapped services and staff\r\n      setEditingRowId(appt.appointmentID);\r\n      setEditFormData({\r\n        appointmentID: appt.appointmentID,\r\n        firstName: appt.client?.firstName || '',\r\n        lastName: appt.client?.lastName || '',\r\n        phoneNumber: appt.client?.phoneNumber || '',\r\n        email: appt.client?.email || '',\r\n        serviceIDs:\r\n          appt.services?.map((service: { serviceName: string }) => {\r\n            const matchedService = servicesList.find(\r\n              (s) => s.serviceName === service.serviceName,\r\n            );\r\n            return matchedService?.serviceID?.toString() || '';\r\n          }) || [],\r\n        userID: staff?.userID || '',\r\n        appointmentDate: appt.appointmentDate\r\n          ? new Date(appt.appointmentDate).toISOString().slice(0, 16)\r\n          : '',\r\n        status: appt.status || 'pa përfunduar',\r\n        notes: appt.notes || '',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Convert serviceIDs to numbers\r\n    const serviceIDsAsNumbers = editFormData.serviceIDs.map((id) => Number(id));\r\n\r\n    const payload = {\r\n      client: {\r\n        firstName: editFormData.firstName,\r\n        lastName: editFormData.lastName,\r\n        phoneNumber: editFormData.phoneNumber,\r\n        email: editFormData.email,\r\n      },\r\n      appointmentID: editFormData.appointmentID || 0, // Default to 0 if null\r\n      userID: Number(editFormData.userID), // Ensure userID is a number\r\n      serviceIDs: serviceIDsAsNumbers, // Send IDs as numbers\r\n      appointmentDate: editFormData.appointmentDate,\r\n      status: editFormData.status,\r\n      notes: editFormData.notes,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `https://api.studio-linda.com/api/Appointment/${editFormData.appointmentID}`,\r\n        payload,\r\n      );\r\n      fetchAppointments();\r\n      // Update the appointments state\r\n      setAppointments((prevAppointments) =>\r\n        prevAppointments.map((appt) =>\r\n          appt.appointmentID === response.data.appointmentID\r\n            ? { ...appt, ...response.data }\r\n            : appt,\r\n        ),\r\n      );\r\n\r\n      // Reset edit form data and close edit mode\r\n      setEditingRowId(null);\r\n      setEditFormData({\r\n        appointmentID: null,\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        userID: '',\r\n        serviceIDs: [],\r\n        appointmentDate: '',\r\n        status: 'pa përfunduar',\r\n        notes: '',\r\n      });\r\n    } catch (error) {\r\n      console.error(\r\n        'Error while editing appointment:',\r\n        error.response?.data || error.message,\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await axios.delete(`https://api.studio-linda.com/api/Appointment/${id}`);\r\n      setAppointments((prev) =>\r\n        prev.filter((appt) => appt.appointmentID !== id),\r\n      );\r\n    } catch (error) {\r\n      console.error('Error deleting appointment:', error);\r\n    }\r\n  };\r\n\r\n  const filteredAppointments = appointments.filter((appt) => {\r\n    if (\r\n      !appt.appointmentDate ||\r\n      isNaN(new Date(appt.appointmentDate).getTime())\r\n    ) {\r\n      console.warn(`Invalid appointment date for ID: ${appt.appointmentID}`);\r\n      return false;\r\n    }\r\n\r\n    // Ensure edited appointments are included based on their updated date\r\n    return (\r\n      new Date(appt.appointmentDate).toISOString().split('T')[0] ===\r\n      selectedDate\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"rounded-sm border border-stroke bg-white px-5 pt-6 pb-2.5 shadow-default sm:px-7.5 xl:pb-1 text-black dark:text-white dark:border-strokedark dark:bg-boxdark mb-20\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-xl font-semibold text-blue-900 dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n          Terminet\r\n        </h1>\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n            className=\"px-4 py-2 border rounded-md mr-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n          />\r\n          <button\r\n            onClick={() => setShowForm(!showForm)}\r\n            className=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-md\"\r\n          >\r\n            {showForm ? 'X' : 'Shto Terminin'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {showForm && (\r\n        <form onSubmit={handleSubmit} className=\"mt-4\">\r\n          <div className=\"grid grid-cols-2 gap-4 \">\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Emri i Klientit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={newAppointment.firstName}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Mbiemri i Klientit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={newAppointment.lastName}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Numri i Klientit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={newAppointment.phoneNumber}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Email i Klientit\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={newAppointment.email}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shërbimi\r\n              </label>\r\n              <select\r\n                name=\"serviceIDs\"\r\n                multiple\r\n                value={newAppointment.serviceIDs}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              >\r\n                <option value=\"\">Zgjedh Shërbimet</option>\r\n                {servicesList.map((service) => (\r\n                  <option key={service.serviceID} value={service.serviceID}>\r\n                    {service.serviceName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Stafi\r\n              </label>\r\n              <select\r\n                name=\"userID\"\r\n                value={newAppointment.userID}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              >\r\n                <option value=\"\">Zgjedh Stafin</option>\r\n                {staffList.map((staff) => (\r\n                  <option key={staff.userID} value={staff.userID}>\r\n                    {staff.firstName} {staff.lastName}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Data e Terminit\r\n              </label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                name=\"appointmentDate\"\r\n                value={newAppointment.appointmentDate}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Statusi i Terminit\r\n              </label>\r\n              <select\r\n                name=\"status\"\r\n                value={newAppointment.status}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              >\r\n                <option value=\"pa përfunduar\">Pa Përfunduar</option>\r\n                <option value=\"përfunduar\">Përfunduar</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shënime\r\n              </label>\r\n              <textarea\r\n                name=\"notes\"\r\n                value={newAppointment.notes}\r\n                onChange={handleInputChange}\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n          >\r\n            Shto Terminin\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      <div className=\"max-w-full overflow-x-auto mt-6 \">\r\n        <table className=\"w-full table-auto text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n          <thead className=\"bg-gray-200 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n            <tr>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Klienti\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Numri i Klientit\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Email i Klientit\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shërbimi\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Stafi\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Data\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Statusi\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shënimet\r\n              </th>\r\n              <th className=\"py-3 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Veptimet\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredAppointments.map((appt) => (\r\n              <React.Fragment key={appt.appointmentID}>\r\n                <tr>\r\n                  <td className=\"py-3 px-4 \">\r\n                    {appt.client?.firstName} {appt.client?.lastName}\r\n                  </td>\r\n                  <td className=\"py-3 px-4\">{appt.client?.phoneNumber}</td>\r\n                  <td className=\"py-3 px-4\">{appt.client?.email}</td>\r\n                  <td className=\"py-3 px-4\">\r\n                    {appt.services && appt.services.length > 0\r\n                      ? appt.services\r\n                          .map(\r\n                            (service: { serviceName: string }) =>\r\n                              service.serviceName,\r\n                          )\r\n                          .join(', ')\r\n                      : 'No services'}{' '}\r\n                  </td>\r\n\r\n                  <td className=\"py-3 px-4\">{appt.staffName || 'No Staff'}</td>\r\n\r\n                  <td className=\"py-3 px-4\">\r\n                    {new Date(appt.appointmentDate).toLocaleString()}\r\n                  </td>\r\n                  <td className=\"py-3 px-4\">{appt.status}</td>\r\n                  <td className=\"py-3 px-4\">{appt.notes}</td>\r\n                  <td className=\"py-4 px-4\">\r\n                    <div className=\"flex space-x-2 sm:justify-center\">\r\n                      <button\r\n                        onClick={() => handleEdit(appt)}\r\n                        className=\"bg-blue-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                      >\r\n                        <FaEdit />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDelete(appt.appointmentID)}\r\n                        className=\"bg-red-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                      >\r\n                        <MdOutlineDelete />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                {editingRowId === appt.appointmentID && (\r\n                  <tr>\r\n                    <td\r\n                      colSpan={9}\r\n                      className=\"py-4 px-4 bg-gray-100 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                    >\r\n                      <form onSubmit={handleEditSubmit}>\r\n                        <div className=\"grid grid-cols-2 gap-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                          {/* First Name */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Emri i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"firstName\"\r\n                              value={editFormData.firstName}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Last Name */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Mbiemri i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"lastName\"\r\n                              value={editFormData.lastName}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Phone Number */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Numri i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"phoneNumber\"\r\n                              value={editFormData.phoneNumber}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Email */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Email i Klientit\r\n                            </label>\r\n                            <input\r\n                              type=\"email\"\r\n                              name=\"email\"\r\n                              value={editFormData.email}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Services (Appointment Services) */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Shërbimet\r\n                            </label>\r\n                            <select\r\n                              name=\"serviceIDs\"\r\n                              multiple\r\n                              value={editFormData.serviceIDs} // Bind directly to array of IDs\r\n                              onChange={(e) => {\r\n                                const selectedServices = Array.from(\r\n                                  e.target.selectedOptions,\r\n                                  (option) => option.value,\r\n                                );\r\n                                setEditFormData({\r\n                                  ...editFormData,\r\n                                  serviceIDs: selectedServices,\r\n                                });\r\n                              }}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            >\r\n                              {servicesList.map((service) => (\r\n                                <option\r\n                                  key={service.serviceID}\r\n                                  value={service.serviceID.toString()}\r\n                                >\r\n                                  {service.serviceName}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n\r\n                          {/* Staff */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Stafi\r\n                            </label>\r\n                            <select\r\n                              name=\"userID\"\r\n                              value={editFormData.userID || ''} // Ensure the correct value is set\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Zgjedh Stafin</option>\r\n                              {staffList.map((staff) => (\r\n                                <option key={staff.userID} value={staff.userID}>\r\n                                  {staff.firstName} {staff.lastName}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n\r\n                          {/* Appointment Date */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Data e Terminit\r\n                            </label>\r\n                            <input\r\n                              type=\"datetime-local\"\r\n                              name=\"appointmentDate\"\r\n                              value={editFormData.appointmentDate}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            />\r\n                          </div>\r\n\r\n                          {/* Status */}\r\n                          <div>\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Statusi\r\n                            </label>\r\n                            <select\r\n                              name=\"status\"\r\n                              value={editFormData.status}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                              required\r\n                            >\r\n                              <option value=\"pa përfunduar\">\r\n                                Pa Përfunduar\r\n                              </option>\r\n                              <option value=\"përfunduar\">Përfunduar</option>\r\n                            </select>\r\n                          </div>\r\n\r\n                          {/* Notes */}\r\n                          <div className=\"col-span-2\">\r\n                            <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                              Shënimet\r\n                            </label>\r\n                            <textarea\r\n                              name=\"notes\"\r\n                              value={editFormData.notes}\r\n                              onChange={handleEditInputChange}\r\n                              className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Save Changes Button */}\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n                        >\r\n                          Ruaj\r\n                        </button>\r\n                      </form>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n"],"names":["Appointments","appointments","setAppointments","useState","servicesList","setServicesList","staffList","setStaffList","selectedDate","setSelectedDate","Date","toISOString","split","showForm","setShowForm","editingRowId","setEditingRowId","newAppointment","setNewAppointment","appointmentID","firstName","lastName","phoneNumber","email","userID","serviceIDs","appointmentDate","status","notes","editFormData","setEditFormData","useEffect","fetchAppointments","fetchServicesList","fetchStaffList","async","response","axios","get","data","error","console","services","Array","isArray","filteredStaff","filter","staff","roleID","handleInputChange","e","name","value","target","options","selectedOptions","values","from","map","option","handleEditInputChange","handleEditSubmit","preventDefault","serviceIDsAsNumbers","id","Number","payload","client","put","prevAppointments","appt","_error$response2","message","filteredAppointments","isNaN","getTime","warn","_jsxs","className","children","_jsx","type","onChange","onClick","onSubmit","post","_error$response","required","multiple","service","serviceID","serviceName","_appt$client9","_appt$client10","_appt$client11","_appt$client12","React","length","join","staffName","toLocaleString","_appt$client","_appt$client2","_appt$client3","_appt$client4","_appt$services","_matchedService$servi","matchedService","find","s","toString","slice","_appt$client5","_appt$client6","_appt$client7","_appt$client8","_appt$services2","_matchedService$servi2","handleEdit","FaEdit","delete","prev","handleDelete","MdOutlineDelete","colSpan","selectedServices"],"sourceRoot":""}