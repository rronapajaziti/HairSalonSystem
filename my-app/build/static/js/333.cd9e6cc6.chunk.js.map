{"version":3,"file":"static/js/333.cd9e6cc6.chunk.js","mappings":"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","sources":["pages/Calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Calendar = () => {\r\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [events, setEvents] = useState<any[]>([]);\r\n  const [staffColors, setStaffColors] = useState<any>({});\r\n\r\n  const blueShades = [\r\n    'bg-blue-500',\r\n    'bg-blue-600',\r\n    'bg-blue-400',\r\n    'bg-blue-700',\r\n    'bg-blue-800',\r\n    'bg-blue-900',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, [month, year]);\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/Appointment',\r\n      );\r\n      const appointments = response.data;\r\n\r\n      const newStaffColors: any = {};\r\n      let colorIndex = 0;\r\n\r\n      const formattedEvents = appointments.map((appointment: any) => {\r\n        const staffName = appointment.staffName || 'No Staff';\r\n\r\n        // Assign a unique color for each staff\r\n        if (!newStaffColors[staffName]) {\r\n          newStaffColors[staffName] =\r\n            blueShades[colorIndex % blueShades.length];\r\n          colorIndex++;\r\n        }\r\n\r\n        return {\r\n          date: appointment.appointmentDate.split('T')[0],\r\n          title: appointment.serviceName || 'No Service',\r\n          time: 'All Day',\r\n          color: newStaffColors[staffName],\r\n          staff: staffName,\r\n        };\r\n      });\r\n\r\n      setEvents(formattedEvents);\r\n      setStaffColors(newStaffColors);\r\n    } catch (error) {\r\n      console.error('Error fetching appointments:', error);\r\n    }\r\n  };\r\n\r\n  const getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const getCalendarData = () => {\r\n    const firstDay = new Date(year, month - 1).getDay();\r\n    const daysInMonth = getDaysInMonth(month, year);\r\n    const days = [];\r\n\r\n    for (let i = 0; i < firstDay; i++) {\r\n      days.push(null);\r\n    }\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      days.push(i);\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  const handlePrevMonth = () => {\r\n    if (month === 1) {\r\n      setMonth(12);\r\n      setYear(year - 1);\r\n    } else {\r\n      setMonth(month - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    if (month === 12) {\r\n      setMonth(1);\r\n      setYear(year + 1);\r\n    } else {\r\n      setMonth(month + 1);\r\n    }\r\n  };\r\n\r\n  const calendarData = getCalendarData();\r\n\r\n  const renderEvents = (date: number) => {\r\n    const eventKey = `${year}-${month < 10 ? `0${month}` : month}-${\r\n      date < 10 ? `0${date}` : date\r\n    }`;\r\n    return events\r\n      .filter((event) => event.date === eventKey)\r\n      .map((event, index) => (\r\n        <div\r\n          key={index}\r\n          className={`text-white p-2 mb-1 text-sm rounded w-full ${event.color} overflow-auto`}\r\n        >\r\n          {event.title} ({event.staff})\r\n        </div>\r\n      ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-10\">\r\n      <h1 className=\"text-3xl font-bold text-left text-blue-900 mt-4 mb-6 dark:text-white\">\r\n        Kalendari\r\n      </h1>\r\n      <div className=\"wrapper bg-white rounded shadow w-full dark:border-strokedark dark:bg-boxdark dark:text-white\">\r\n        <div className=\"header flex justify-between border-b p-2\">\r\n          <span className=\"text-lg font-bold text-blue-900 dark:text-white\">\r\n            {year} {month < 10 ? `0${month}` : month}\r\n          </span>\r\n          <div className=\"buttons flex gap-4\">\r\n            <button className=\"p-1\" onClick={handlePrevMonth}>\r\n              <svg\r\n                className=\"w-6 h-6 text-white dark:text-white\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m15 19-7-7 7-7\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <button className=\"p-1\" onClick={handleNextMonth}>\r\n              <svg\r\n                className=\"w-6 h-6 text-white dark:text-white\"\r\n                aria-hidden=\"true\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  stroke=\"currentColor\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"m9 5 7 7-7 7\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <table className=\"w-full dark:border-strokedark dark:bg-boxdark dark:text-white\">\r\n          <thead>\r\n            <tr>\r\n              {[\r\n                'E Diel',\r\n                'E Hënë',\r\n                'E Martë',\r\n                'E Mërkurë',\r\n                'E Enjëte',\r\n                'E Premte',\r\n                'E  Shtunë',\r\n              ].map((day) => (\r\n                <th\r\n                  key={day}\r\n                  className=\"p-2 border-r h-10 text-blue-900 dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                >\r\n                  <span>{day}</span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Array.from({ length: 6 }, (_, rowIndex) => (\r\n              <tr key={rowIndex} className=\"text-center h-20\">\r\n                {Array.from({ length: 7 }, (_, colIndex) => {\r\n                  const dayIndex = rowIndex * 7 + colIndex;\r\n                  const day = calendarData[dayIndex] || '';\r\n                  return (\r\n                    <td\r\n                      key={colIndex}\r\n                      className=\"border border-gray-300 p-1 h-40 w-40 overflow-hidden dark:text-white\"\r\n                    >\r\n                      <div className=\"flex flex-col h-40 mx-auto overflow-hidden\">\r\n                        <div className=\"top h-5 w-full\">\r\n                          <span className=\"text-gray-900 dark:text-white\">\r\n                            {day}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"bottom flex-grow h-30 py-1 w-full overflow-y-auto\">\r\n                          {day && renderEvents(day)}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"names":["Calendar","month","setMonth","useState","Date","getMonth","year","setYear","getFullYear","events","setEvents","staffColors","setStaffColors","blueShades","useEffect","fetchAppointments","async","appointments","axios","get","data","newStaffColors","colorIndex","formattedEvents","map","appointment","staffName","length","date","appointmentDate","split","title","serviceName","time","color","staff","error","console","calendarData","getCalendarData","firstDay","getDay","daysInMonth","getDaysInMonth","getDate","days","i","push","renderEvents","eventKey","filter","event","index","_jsxs","className","children","_jsx","onClick","handlePrevMonth","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","handleNextMonth","day","Array","from","_","rowIndex","colIndex"],"sourceRoot":""}