{"version":3,"file":"static/js/178.c787811b.chunk.js","mappings":"+LAIA,MAqPA,EArPqBA,KACnB,MAAOC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAgB,KACzDC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAgB,KACnDG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAgB,KAC3CK,EAAYC,IAAiBN,EAAAA,EAAAA,WAClC,IAAIO,MAAOC,cAAcC,MAAM,KAAK,KAGtCC,EAAAA,EAAAA,YAAU,KACRC,IACAC,IACAC,IAEA,MAAMC,EAAmBA,KACvBH,IACAC,IACAC,GAAgB,EAKlB,OAFAE,OAAOC,iBAAiB,cAAeF,GAEhC,KACLC,OAAOE,oBAAoB,cAAeH,EAAiB,CAC5D,GACA,IAEH,MAAMH,EAAoBO,UACxB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,iDAEFtB,EAAoBoB,EAASG,KAC/B,CAAE,MAAOC,GACPC,QAAQD,MAAM,qCAAsCA,EACtD,GAGIX,EAAqBM,UACzB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,gEAEFnB,EAAiBiB,EAASG,KAC5B,CAAE,MAAOC,GACPC,QAAQD,MAAM,iCAAkCA,EAClD,GAEIE,EAAuB3B,EAAiB4B,QAAQC,GACnC,IAAIpB,KAAKoB,EAAKC,eAAepB,cAAcC,MAAM,KAAK,KACnDJ,IAGhBQ,EAAiBK,UACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAC3B,oDAEFjB,EAAae,EAASG,KACxB,CAAE,MAAOC,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GAyBIM,EAAwB5B,EAAcyB,QAAQC,GACjC,IAAIpB,KAAKA,KAAKuB,IAAIH,EAAKI,KAAMJ,EAAKK,MAAQ,EAAGL,EAAKM,MAChEzB,cACAC,MAAM,KAAK,KACMJ,IAWtB,OACE6B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+JAA8JC,SAAA,EAC3KF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,kCAAiCC,SAAC,4BAGnDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOlC,EACPmC,SAAWC,GAAMnC,EAAcmC,EAAEC,OAAOH,OACxCJ,UAAU,qGAEP,KACPE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uDAAsDC,SAAC,+BAIrEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qGAAoGC,SAAA,EACnHC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,yBAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,iBAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,6BAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,kBAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,8BAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,2BAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,kBAKhGC,EAAAA,EAAAA,KAAA,SAAAD,SACGX,EAAqBkB,KAAKhB,IACzB,MAAMiB,EAAkBC,WAnFHC,EAC/BC,EACAC,KAEA,MAAMC,EAAM,IAAI1C,KACV2C,EAAqB/C,EAAUgD,MAClCC,GACCA,EAASJ,YAAcA,GACvB,IAAIzC,KAAK6C,EAASC,YAAcJ,GAChC,IAAI1C,KAAK6C,EAASE,UAAYL,IAGlC,OAAIC,GAEAH,EACCA,EAAeG,EAAmBK,mBAAsB,KACzDC,QAAQ,GAGLT,EAAaS,QAAQ,EAAE,EAiElBV,CAAyBnB,EAAKoB,aAAcpB,EAAKqB,YAE7CS,EAAgBb,EAAkBjB,EAAK+B,WAAc,IAE3D,OACExB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjDT,EAAKgC,aAERtB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjDT,EAAKiC,eAER1B,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uCAAsCC,SAAA,CACjDQ,EAAgBY,QAAQ,GAAG,aAE9BtB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uCAAsCC,SAAA,CACjDT,EAAK+B,WAAWF,QAAQ,GAAG,QAE9BtB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uCAAsCC,SAAA,CACjDqB,EAAaD,QAAQ,GAAG,aAE3BnB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjDT,EAAKC,cACF,IAAIrB,KAAKoB,EAAKC,eAAeiC,iBAC7B,SAENxB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,UACEyB,QAASA,IApFR5C,WACnB,UACQE,EAAAA,EAAM2C,OAAO,iDAAiDC,WAC9DrD,GACR,CAAE,MAAOY,GACPC,QAAQD,MAAM,sCAAuCA,EACvD,GA8EiC0C,CAAatC,EAAKuC,gBACjC/B,UAAU,kFAAiFC,UAE3FC,EAAAA,EAAAA,KAAC8B,EAAAA,IAAe,UA1BbxC,EAAKuC,eA6BT,YAOfhC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uDAAsDC,SAAC,oBAGrEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,qGAAoGC,SAAA,EACnHC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,yBAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,UAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,WAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,UAG5FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,8EAA6EC,SAAC,iBAKhGC,EAAAA,EAAAA,KAAA,SAAAD,SACGP,EAAsBc,KAAKhB,IAC1BO,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAGEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjDT,EAAKgC,aAERtB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjDT,EAAKM,OAERI,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjD,IAAI7B,KAAKoB,EAAKI,KAAMJ,EAAKK,MAAQ,GAAG6B,eAAe,KAAM,CACxD7B,MAAO,YAGXK,EAAAA,EAAAA,KAAA,MAAIF,UAAU,uCAAsCC,SACjDT,EAAKI,QAERG,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uCAAsCC,SAAA,CACjDT,EAAKyC,cAAcZ,QAAQ,GAAG,cAjB5B,GAAG7B,EAAK0C,WAAW1C,EAAKI,QAAQJ,EAAKK,SAASL,EAAKM,qBAyBhE,C","sources":["pages/ServiceStaff.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\n\r\nconst ServiceStaff = () => {\r\n  const [serviceStaffList, setServiceStaffList] = useState<any[]>([]);\r\n  const [dailyEarnings, setDailyEarnings] = useState<any[]>([]);\r\n  const [discounts, setDiscounts] = useState<any[]>([]);\r\n  const [filterDate, setFilterDate] = useState<string>(\r\n    new Date().toISOString().split('T')[0],\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchServiceStaff();\r\n    fetchDailyEarnings();\r\n    fetchDiscounts();\r\n\r\n    const handleDataUpdate = () => {\r\n      fetchServiceStaff();\r\n      fetchDailyEarnings();\r\n      fetchDiscounts();\r\n    };\r\n\r\n    window.addEventListener('dataUpdated', handleDataUpdate);\r\n\r\n    return () => {\r\n      window.removeEventListener('dataUpdated', handleDataUpdate);\r\n    };\r\n  }, []);\r\n\r\n  const fetchServiceStaff = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/ServiceStaff',\r\n      );\r\n      setServiceStaffList(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching service staff data:', error);\r\n    }\r\n  };\r\n\r\n  const fetchDailyEarnings = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/ServiceStaff/daily-earnings',\r\n      );\r\n      setDailyEarnings(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching daily earnings:', error);\r\n    }\r\n  };\r\n  const filteredServiceStaff = serviceStaffList.filter((item) => {\r\n    const itemDate = new Date(item.dateCompleted).toISOString().split('T')[0];\r\n    return itemDate === filterDate;\r\n  });\r\n\r\n  const fetchDiscounts = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/ServiceDiscount',\r\n      );\r\n      setDiscounts(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching discounts:', error);\r\n    }\r\n  };\r\n\r\n  const calculateDiscountedPrice = (\r\n    servicePrice: number,\r\n    serviceID: number,\r\n  ) => {\r\n    const now = new Date();\r\n    const applicableDiscount = discounts.find(\r\n      (discount) =>\r\n        discount.serviceID === serviceID &&\r\n        new Date(discount.startDate) <= now &&\r\n        new Date(discount.endDate) >= now,\r\n    );\r\n\r\n    if (applicableDiscount) {\r\n      return (\r\n        servicePrice -\r\n        (servicePrice * applicableDiscount.discountPercentage) / 100\r\n      ).toFixed(2);\r\n    }\r\n\r\n    return servicePrice.toFixed(2);\r\n  };\r\n\r\n  const filteredDailyEarnings = dailyEarnings.filter((item) => {\r\n    const itemDate = new Date(Date.UTC(item.year, item.month - 1, item.day))\r\n      .toISOString()\r\n      .split('T')[0];\r\n    return itemDate === filterDate;\r\n  });\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await axios.delete(`https://api.studio-linda.com/api/ServiceStaff/${id}`);\r\n      await fetchServiceStaff(); // Refresh the data\r\n    } catch (error) {\r\n      console.error('Error deleting ServiceStaff record:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"rounded-sm border border-stroke text-black bg-white px-5 pt-6 pb-2.5 shadow-default sm:px-7.5 xl:pb-1 dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n      <div className=\"flex items-center mb-4\">\r\n        <label className=\"mr-4 text-black dark:text-white\">\r\n          Filtro sipas datës:\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          value={filterDate}\r\n          onChange={(e) => setFilterDate(e.target.value)}\r\n          className=\"px-4 py-2 border rounded-md text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n        />\r\n      </div>{' '}\r\n      <h1 className=\"text-xl font-semibold text-blue-900 dark:text-white \">\r\n        Pagesa sipas Shërbimit\r\n      </h1>\r\n      {/* Service Staff Table */}\r\n      <div className=\"overflow-x-auto mt-6\">\r\n        <table className=\"w-full text-left border-collapse text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n          <thead>\r\n            <tr className=\"bg-gray-200\">\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Emri i Punëtores\r\n              </th>\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Shërbimi\r\n              </th>\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Çmimi i Shërbimit\r\n              </th>\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Përqindja\r\n              </th>\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Pagesa për shërbim\r\n              </th>\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Data e përfundimit\r\n              </th>\r\n              <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Veprime\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredServiceStaff.map((item) => {\r\n              const discountedPrice = parseFloat(\r\n                calculateDiscountedPrice(item.servicePrice, item.serviceID),\r\n              );\r\n              const staffEarning = (discountedPrice * item.percentage) / 100;\r\n\r\n              return (\r\n                <tr key={item.serviceStaffID}>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.staffName}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.serviceName}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {discountedPrice.toFixed(2)}€\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.percentage.toFixed(2)}%\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {staffEarning.toFixed(2)}€\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.dateCompleted\r\n                      ? new Date(item.dateCompleted).toLocaleString()\r\n                      : 'N/A'}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => handleDelete(item.serviceStaffID)}\r\n                      className=\"bg-red-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                    >\r\n                      <MdOutlineDelete />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* Daily Earnings Table */}\r\n      <div className=\"mt-10\">\r\n        <h2 className=\"text-xl font-semibold text-blue-900 dark:text-white \">\r\n          Pagesat Ditore\r\n        </h2>\r\n        <div className=\"overflow-x-auto mt-6\">\r\n          <table className=\"w-full text-left border-collapse text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n            <thead>\r\n              <tr className=\"bg-gray-200\">\r\n                <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                  Emri i Punëtores\r\n                </th>\r\n                <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                  Dita\r\n                </th>\r\n                <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                  Muaji\r\n                </th>\r\n                <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                  Viti\r\n                </th>\r\n                <th className=\"py-2 px-4 text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                  Totali\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredDailyEarnings.map((item) => (\r\n                <tr\r\n                  key={`${item.staffID}-${item.year}-${item.month}-${item.day}`}\r\n                >\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.staffName}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.day}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {new Date(item.year, item.month - 1).toLocaleString('sq', {\r\n                      month: 'long',\r\n                    })}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.year}\r\n                  </td>\r\n                  <td className=\"py-2 px-4 text-black dark:text-white\">\r\n                    {item.totalEarnings.toFixed(2)}€\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceStaff;\r\nfunction setIsLoading(arg0: boolean) {\r\n  throw new Error('Function not implemented.');\r\n}\r\n"],"names":["ServiceStaff","serviceStaffList","setServiceStaffList","useState","dailyEarnings","setDailyEarnings","discounts","setDiscounts","filterDate","setFilterDate","Date","toISOString","split","useEffect","fetchServiceStaff","fetchDailyEarnings","fetchDiscounts","handleDataUpdate","window","addEventListener","removeEventListener","async","response","axios","get","data","error","console","filteredServiceStaff","filter","item","dateCompleted","filteredDailyEarnings","UTC","year","month","day","_jsxs","className","children","_jsx","type","value","onChange","e","target","map","discountedPrice","parseFloat","calculateDiscountedPrice","servicePrice","serviceID","now","applicableDiscount","find","discount","startDate","endDate","discountPercentage","toFixed","staffEarning","percentage","staffName","serviceName","toLocaleString","onClick","delete","id","handleDelete","serviceStaffID","MdOutlineDelete","totalEarnings","staffID"],"sourceRoot":""}