{"version":3,"file":"static/js/916.f56ddd7d.chunk.js","mappings":"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","sources":["pages/MonthlyExpensess.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport { MdOutlineDelete } from 'react-icons/md';\r\n\r\nconst MonthlyExpenses = ({ searchQuery }: { searchQuery: string }) => {\r\n  const [expenses, setExpenses] = useState<any[]>([]);\r\n  const [selectedMonth, setSelectedMonth] = useState<string>(\r\n    new Date().toISOString().slice(0, 7), // Default to current year and month\r\n  );\r\n  const [totalCost, setTotalCost] = useState<number>(0);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingExpenseId, setEditingExpenseId] = useState<number | null>(null);\r\n\r\n  const [newExpense, setNewExpense] = useState({ name: '', amount: '' });\r\n  const [editFormData, setEditFormData] = useState({\r\n    id: null,\r\n    name: '',\r\n    amount: '',\r\n    date: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchMonthlyExpenses();\r\n  }, [selectedMonth]);\r\n\r\n  const fetchMonthlyExpenses = async () => {\r\n    const [year, month] = selectedMonth.split('-');\r\n    try {\r\n      const response = await axios.get(\r\n        'https://api.studio-linda.com/api/monthlyexpenses',\r\n        {\r\n          params: { year, month },\r\n        },\r\n      );\r\n      setExpenses(response.data.expenses || []);\r\n      setTotalCost(response.data.totalCost || 0);\r\n    } catch (error) {\r\n      console.error('Error fetching monthly expenses:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddExpense = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const payload = {\r\n        name: newExpense.name,\r\n        amount: parseFloat(newExpense.amount),\r\n        date: `${selectedMonth}-01`,\r\n      };\r\n\r\n      const response = await axios.post(\r\n        'https://api.studio-linda.com/api/monthlyexpenses',\r\n        payload,\r\n      );\r\n      setExpenses((prev) => [...prev, response.data]);\r\n      setNewExpense({ name: '', amount: '' });\r\n      setShowForm(false);\r\n      fetchMonthlyExpenses();\r\n    } catch (error) {\r\n      console.error('Error adding monthly expense:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (expense: any) => {\r\n    if (editingExpenseId === expense.id) {\r\n      setEditingExpenseId(null);\r\n    } else {\r\n      setEditingExpenseId(expense.id);\r\n      setEditFormData({\r\n        id: expense.id,\r\n        name: expense.name,\r\n        amount: expense.amount,\r\n        date: expense.date,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const payload = {\r\n        id: editFormData.id,\r\n        name: editFormData.name,\r\n        amount: parseFloat(editFormData.amount),\r\n        date: editFormData.date,\r\n      };\r\n\r\n      const response = await axios.put(\r\n        `https://api.studio-linda.com/api/monthlyexpenses/${editFormData.id}`,\r\n        payload,\r\n      );\r\n      setExpenses((prev) =>\r\n        prev.map((expense) =>\r\n          expense.id === payload.id ? response.data : expense,\r\n        ),\r\n      );\r\n      setEditingExpenseId(null);\r\n      fetchMonthlyExpenses();\r\n    } catch (error) {\r\n      console.error('Error editing monthly expense:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await axios.delete(\r\n        `https://api.studio-linda.com/api/monthlyexpenses/${id}`,\r\n      );\r\n      setExpenses((prev) => prev.filter((expense) => expense.id !== id));\r\n      fetchMonthlyExpenses();\r\n    } catch (error) {\r\n      console.error('Error deleting monthly expense:', error);\r\n    }\r\n  };\r\n\r\n  // Filter expenses based on search query\r\n  const filteredExpenses = expenses.filter((expense) =>\r\n    expense.name.toLowerCase().includes(searchQuery.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <div className=\"rounded-sm border border-stroke bg-white px-5 pt-6 pb-2.5 shadow-default dark:border-strokedark dark:bg-boxdark sm:px-7.5 xl:pb-1\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-xl font-semibold text-blue-900 dark:text-white\">\r\n          Shpenzimet Mujore\r\n        </h1>\r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"month\"\r\n            value={selectedMonth}\r\n            onChange={(e) => setSelectedMonth(e.target.value)}\r\n            className=\"px-4 py-2 border rounded-md mr-4 text-black dark:text-white  dark:border-strokedark dark:bg-boxdark\"\r\n          />\r\n          <button\r\n            onClick={() => setShowForm(!showForm)}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md\"\r\n          >\r\n            {showForm ? 'X' : 'Shto Shpenzimin'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {showForm && (\r\n        <form onSubmit={handleAddExpense} className=\"mb-6\">\r\n          <div className=\"grid grid-cols-2 gap-4 \">\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Emri i Shpenzimit\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={newExpense.name}\r\n                onChange={(e) =>\r\n                  setNewExpense({ ...newExpense, name: e.target.value })\r\n                }\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block font-medium text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n                Çmimi (€)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                value={newExpense.amount}\r\n                onChange={(e) =>\r\n                  setNewExpense({ ...newExpense, amount: e.target.value })\r\n                }\r\n                className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n          >\r\n            Shto\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      <table className=\"w-full table-auto border-collapse text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n        <thead>\r\n          <tr className=\"bg-gray-200\">\r\n            <th className=\"py-2 px-4 text-left text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n              Emri i Shpenzimit\r\n            </th>\r\n            <th className=\"py-2 px-4 text-left text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n              Çmimi (€)\r\n            </th>\r\n            <th className=\"py-2 px-4 text-left text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n              Data\r\n            </th>\r\n            <th className=\"py-2 px-4 text-left text-black dark:text-white dark:border-strokedark dark:bg-boxdark\">\r\n              Veprimet\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredExpenses.map((expense) => (\r\n            <React.Fragment key={expense.id}>\r\n              <tr>\r\n                <td>{expense.name}</td>\r\n                <td>{expense.amount.toFixed(2)}€</td>\r\n                <td>{new Date(expense.date).toLocaleDateString()}</td>\r\n                <td className=\"py-4 px-4\">\r\n                  <div className=\"flex space-x-2 sm:justify-center\">\r\n                    <button\r\n                      onClick={() => handleEdit(expense)}\r\n                      className=\"bg-blue-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                    >\r\n                      <FaEdit />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDelete(expense.id)}\r\n                      className=\"bg-red-500 text-white rounded-md px-4 py-2 text-base sm:px-4 sm:py-2 sm:text-sm\"\r\n                    >\r\n                      <MdOutlineDelete />\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {editingExpenseId === expense.id && (\r\n                <tr>\r\n                  <td colSpan={4}>\r\n                    <form onSubmit={handleEditSubmit} className=\"py-4 px-4\">\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label>Emri i Shpenzimit</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={editFormData.name}\r\n                            onChange={(e) =>\r\n                              setEditFormData({\r\n                                ...editFormData,\r\n                                name: e.target.value,\r\n                              })\r\n                            }\r\n                            className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label>Çmimi (€)</label>\r\n                          <input\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            value={editFormData.amount}\r\n                            onChange={(e) =>\r\n                              setEditFormData({\r\n                                ...editFormData,\r\n                                amount: e.target.value,\r\n                              })\r\n                            }\r\n                            className=\"px-4 py-2 border rounded-md w-full text-black dark:text-white dark:border-strokedark dark:bg-boxdark\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n                      >\r\n                        Ruaj\r\n                      </button>\r\n                    </form>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td className=\"py-4 px-6 font-bold\">Totali</td>\r\n            <td className=\"py-2 px-4 font-bold\">{totalCost.toFixed(2)}€</td>\r\n            <td colSpan={2}></td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyExpenses;\r\n"],"names":["_ref","searchQuery","expenses","setExpenses","useState","selectedMonth","setSelectedMonth","Date","toISOString","slice","totalCost","setTotalCost","showForm","setShowForm","editingExpenseId","setEditingExpenseId","newExpense","setNewExpense","name","amount","editFormData","setEditFormData","id","date","useEffect","fetchMonthlyExpenses","async","year","month","split","response","axios","get","params","data","error","console","handleEditSubmit","e","preventDefault","payload","parseFloat","put","prev","map","expense","filteredExpenses","filter","toLowerCase","includes","_jsxs","className","children","_jsx","type","value","onChange","target","onClick","onSubmit","post","required","React","toFixed","toLocaleDateString","handleEdit","FaEdit","delete","handleDelete","MdOutlineDelete","colSpan"],"sourceRoot":""}